@model Tumin.Models.UserInformation
@inject UserManager<ApplicationUser> userManager
@{
    ViewData["Title"] = "Details";
    
   var userRoles = await userManager.GetRolesAsync(userManager.FindByIdAsync(Model.UserId.ToString()).Result);
  
};


<div class="container">
    <div class="row">
        <div class="col-md-3">

            <div class="card text-center">
                <div style="padding:20px 40px">
                    @if (ViewBag.avatarUrl != "")
                    {
                        <img class="rounded img-fluid" src="@ViewBag.avatarUrl" alt="Card image cap">}
                    else
                    {
                        <img class="rounded img-fluid" src="~/images/defaultAvatar.png" alt="Card image cap">
                    }
                </div>
                <div class="card-body">
                    <h5 class="card-title"> @Html.DisplayFor(model => model.FistName)   @Html.DisplayFor(model => model.LastName)</h5>
                </div>
            </div>

            <br />

            <div class="card">
                <div class="card-header card-header-success">
                    Tools
                </div>
                <ul class="list-group list-group-flush">
                    <li class="list-group-item"> <a asp-action="Edit" asp-route-id="@Model.UserId">Edit Information</a></li>
                    <li class="list-group-item">
                        <a asp-area="" asp-controller="Manage" asp-action="ChangePassword" title="Manage">Change Password</a>
                    </li>
                    <li class="list-group-item"> <a asp-action="AvatarUpload" asp-route-id="@Model.UserId">Change Profile Picture</a></li>
                    <li class="list-group-item"> <a asp-action="EditBusinessLocation" asp-route-id="@Model.UserId">Change Business Location</a></li>
                    <li class="list-group-item">
                        <button type="button" class="btn btn-danger" id="btnDeleteModal">
                            Delete Account
                        </button>
                    </li>
                </ul>
            </div>
        </div>


        <div class="col-md-9">
            @if (userRoles.Contains("business") )
            {

                <div class="card">
                    <div class="card-body">
                        <h4>Commerce Location</h4>
                        <div id="map_canvas" style="width:100%;height:266px; margin:0"></div>
                    </div>
                </div>
            }


            <div class="card">
                <div class="card-body">
                    <h4>User Information</h4>
                    <dl class="dl-horizontal">
                        <dt>
                            @Html.DisplayNameFor(model => model.FistName)
                        </dt>
                        <dd>
                            @Html.DisplayFor(model => model.FistName)
                        </dd>
                        <dt>
                            @Html.DisplayNameFor(model => model.LastName)
                        </dt>
                        <dd>
                            @Html.DisplayFor(model => model.LastName)
                        </dd>
                        <dt>
                            @Html.DisplayNameFor(model => model.MothersLastName)
                        </dt>
                        <dd>
                            @Html.DisplayFor(model => model.MothersLastName)
                        </dd>
                        <dt>
                            @Html.DisplayNameFor(model => model.Curp)
                        </dt>
                        <dd>
                            @Html.DisplayFor(model => model.Curp)
                        </dd>
                        <dt>
                            @Html.DisplayNameFor(model => model.Address)
                        </dt>
                        <dd>
                            @Html.DisplayFor(model => model.Address)
                        </dd>
                        <dt>
                            @Html.DisplayNameFor(model => model.State)
                        </dt>
                        <dd>
                            @Html.DisplayFor(model => model.State)
                        </dd>
                        <dt>
                            @Html.DisplayNameFor(model => model.ZipCode)
                        </dt>
                        <dd>
                            @Html.DisplayFor(model => model.ZipCode)
                        </dd>
                        <dt>
                            @Html.DisplayNameFor(model => model.rfc)
                        </dt>
                        <dd>
                            @Html.DisplayFor(model => model.rfc)
                        </dd>
                        <dt>
                            @Html.DisplayNameFor(model => model.Latitude)
                        </dt>
                        <dd>
                            @Html.DisplayFor(model => model.Latitude)
                        </dd>
                        <dt>
                            @Html.DisplayNameFor(model => model.Longitude)
                        </dt>
                        <dd>
                            @Html.DisplayFor(model => model.Longitude)
                        </dd>
                    </dl>
                </div>
            </div>
        </div>



    </div>

</div>



<div class="modal fade" id="deleteModal" tabindex="-1" role="dialog" style="display: none;" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Modal title</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <i class="material-icons">clear</i>
                </button>
            </div>
            <div class="modal-body">
                <p>
                    Far far away, behind the word mountains, far from the countries Vokalia and Consonantia, there live the blind texts. Separated they live in Bookmarksgrove right at the coast of the Semantics, a large language ocean. A small river named Duden flows by their place and supplies it with the necessary regelialia. It is a paradisematic country, in which roasted parts of sentences fly into your mouth. Even the all-powerful Pointing has no control about the blind texts it is an almost unorthographic life One day however a small line of blind text by the name of Lorem Ipsum decided to leave for the far World of Grammar.
                </p>
            </div>
            <div class="modal-footer">
                <a asp-action="DeleteUser" asp-controller="Account" asp-route-id="@Model.UserId" class="badge badge-danger">Delete Account</a>
                <button type="button" class="btn btn-link" data-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script type="text/javascript" src="https://maps.google.com/maps/api/js?key=AIzaSyCiiL_28RCLY7qi6-85OBOmuGR9vaLmq4E&sensor=true"></script>
    <script src="@Url.Content("~/js/Gmap.js")" type="text/javascript"></script>

    <script>
        $('#btnDeleteModal').click(function () {
            $('#deleteModal').modal('show');

        });

         $(document).on("ready", mapa);
       $(document).ready(function () {
           var classes = ["teg-1", "teg-2", "teg-3", "teg-4", "teg-5"];

           $("#tegcloud a").each(function () {
               $(this).addClass(classes[~~(Math.random() * classes.length)]);
           });
       });

           function mapa(ev) {
            var latitude = "@Model.Latitude";
            var longitude = "@Model.Longitude";
            var lat = latitude.toString().replace(/\,/g, '.'); //Corrige error de Culturizacion del Modelo.
            var long = longitude.toString().replace(/\,/g, '.');
            if ((latitude == 0) || (longitude == 0)) Gmap.LoadMap();
            else {
                Gmap.LoadMap(lat, long);
                var latlng = new google.maps.LatLng(lat, long);
                Gmap.LoadPin(latlng, false);
                }
            };


    </script>

}
